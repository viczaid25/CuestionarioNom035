// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOM35.Web.Data;

#nullable disable

namespace CuestionarioNom035.Migrations
{
    [DbContext(typeof(Nom35DbContext))]
    [Migration("20251023141132_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NOM35.Web.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("NOM35.Web.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("NOM35.Web.Models.Cuestionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AtiendeClientes")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsJefe")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Cuestionarios");
                });

            modelBuilder.Entity("NOM35.Web.Models.CuestionarioSesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AntiBackToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuestionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IndiceActual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuestionarioId");

                    b.ToTable("CuestionarioSesiones");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DominioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DominioId");

                    b.ToTable("Dimensiones");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dominio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Dominios");
                });

            modelBuilder.Entity("NOM35.Web.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("NOM35.Web.Models.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DimensionId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DimensionId");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("NOM35.Web.Models.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuestionarioId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPregunta")
                        .HasColumnType("int");

                    b.Property<int>("Opcion")
                        .HasColumnType("int");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuestionarioId");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("NOM35.Web.Models.Cuestionario", b =>
                {
                    b.HasOne("NOM35.Web.Models.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("NOM35.Web.Models.CuestionarioSesion", b =>
                {
                    b.HasOne("NOM35.Web.Models.Cuestionario", "Cuestionario")
                        .WithMany()
                        .HasForeignKey("CuestionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuestionario");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dimension", b =>
                {
                    b.HasOne("NOM35.Web.Models.Dominio", "Dominio")
                        .WithMany("Dimensiones")
                        .HasForeignKey("DominioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dominio");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dominio", b =>
                {
                    b.HasOne("NOM35.Web.Models.Categoria", "Categoria")
                        .WithMany("Dominios")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("NOM35.Web.Models.Participante", b =>
                {
                    b.HasOne("NOM35.Web.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("NOM35.Web.Models.Pregunta", b =>
                {
                    b.HasOne("NOM35.Web.Models.Dimension", "Dimension")
                        .WithMany("Preguntas")
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Dimension");
                });

            modelBuilder.Entity("NOM35.Web.Models.Respuesta", b =>
                {
                    b.HasOne("NOM35.Web.Models.Cuestionario", "Cuestionario")
                        .WithMany("Respuestas")
                        .HasForeignKey("CuestionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NOM35.Web.Models.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cuestionario");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("NOM35.Web.Models.Categoria", b =>
                {
                    b.Navigation("Dominios");
                });

            modelBuilder.Entity("NOM35.Web.Models.Cuestionario", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dimension", b =>
                {
                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("NOM35.Web.Models.Dominio", b =>
                {
                    b.Navigation("Dimensiones");
                });
#pragma warning restore 612, 618
        }
    }
}
